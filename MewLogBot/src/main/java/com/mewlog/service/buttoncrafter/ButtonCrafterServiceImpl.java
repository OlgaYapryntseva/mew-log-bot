package com.mewlog.service.buttoncrafter;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import com.mewlog.repository.AnimalRepository;
import com.mewlog.repository.model.Animal;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ButtonCrafterServiceImpl implements ButtonCrafterService{

	@Autowired
	AnimalRepository animalRepository;
	
	public InlineKeyboardMarkup createInlineKeyboard(long chatId) {
		List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
		InlineKeyboardButton addLogButton = new InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å –∫–æ—à–∞—á—å–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è ‚úè");
		Animal animal = animalRepository.findByOwnersId(chatId);
		if (animal == null) {
			InlineKeyboardButton addAnimalButton = new InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø—É—à–∏—Å—Ç–æ–≥–æ –¥—Ä—É–≥–∞ üòª");
			addAnimalButton.setCallbackData("add animal");
			keyboard.add(Collections.singletonList(addAnimalButton));
		}
		addLogButton.setCallbackData("add log");
		keyboard.add(Collections.singletonList(addLogButton));
		return new InlineKeyboardMarkup(keyboard);
	}

	public InlineKeyboardMarkup showLogOptions(long chatId) {
		InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();

		InlineKeyboardButton catPoopedButton = new InlineKeyboardButton("–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ üí©");
		catPoopedButton.setCallbackData("üí©");

		InlineKeyboardButton litterChangeButton = new InlineKeyboardButton("–°–º–µ–Ω–∞ –ª–æ—Ç–∫–∞ üöæ");
		litterChangeButton.setCallbackData("–°–º–µ–Ω–∞ –ª–æ—Ç–∫–∞ üöæ");

		InlineKeyboardButton foodChangeButton = new InlineKeyboardButton("–í–∫—É—Å–Ω—è—à–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ü•©");
		foodChangeButton.setCallbackData("–í–∫—É—Å–Ω—è—à–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ü•©");

		InlineKeyboardButton waterChangeButton = new InlineKeyboardButton("–í–æ–¥–∏—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ üí¶");
		waterChangeButton.setCallbackData("–í–æ–¥–∏—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ üí¶");

		InlineKeyboardButton customLogButton = new InlineKeyboardButton("–í–∞—à–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ üßê");
		customLogButton.setCallbackData("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
		
		List<InlineKeyboardButton> row1 = Arrays.asList(catPoopedButton, litterChangeButton);
	    List<InlineKeyboardButton> row2 = Arrays.asList(foodChangeButton, waterChangeButton);
	    List<InlineKeyboardButton> row3 = Arrays.asList(customLogButton);

		List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
		keyboard.add(row1);
		keyboard.add(row2);
		keyboard.add(row3);
		keyboardMarkup.setKeyboard(keyboard);		
		return keyboardMarkup;
	}

	@Override
	public InlineKeyboardMarkup showReportTypeOptions(long chatId) {
		List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
		InlineKeyboardButton addPeriodButton = new InlineKeyboardButton("–ö–æ—Ç–æ–æ—Ç—á–µ—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥");
		InlineKeyboardButton addKeywordButton = new InlineKeyboardButton("–ö–æ—Ç–æ–∫–ª—é—á –∑–∞ –ø–µ—Ä–∏–æ–¥");
		addPeriodButton.setCallbackData("–æ—Ç—á–µ—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥");
		addKeywordButton.setCallbackData("–æ—Ç—á–µ—Ç –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É");
		List<InlineKeyboardButton> row = Arrays.asList(addPeriodButton, addKeywordButton);
		keyboard.add(row);
		return new InlineKeyboardMarkup(keyboard);
	}
	
	@Override
	public InlineKeyboardMarkup showReportOptions(long chatId) {
		List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
		InlineKeyboardButton addDayButton = new InlineKeyboardButton("–î–µ–Ω—å");
		InlineKeyboardButton addMonthButton = new InlineKeyboardButton("–ú–µ—Å—è—Ü");
		InlineKeyboardButton addYearButton = new InlineKeyboardButton("–ì–æ–¥");
		addDayButton.setCallbackData("–¥–µ–Ω—å");
		addMonthButton.setCallbackData("–º–µ—Å—è—Ü");
		addYearButton.setCallbackData("–≥–æ–¥");
		List<InlineKeyboardButton> row = Arrays.asList(addDayButton, addMonthButton, addYearButton);
		keyboard.add(row);
//		keyboard.add(Collections.singletonList(addDayButton));
//		keyboard.add(Collections.singletonList(addMonthButton));
//		keyboard.add(Collections.singletonList(addYearButton));
		return new InlineKeyboardMarkup(keyboard);
	}
}
